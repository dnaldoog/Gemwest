#include "pch.h"
#include "CCutDim.h"
Boolean CCutDim::isRoundish(String^ cutname) {
	Dictionary<String^, Boolean>^ CCutDim = gcnew Dictionary<String^, Boolean>;
	CCutDim->Add(CHOOSE, true);
	CCutDim->Add(BRIO, false);
	CCutDim->Add("cabochon - regular", false);
	CCutDim->Add("cabochon - high domed cabs", false);
	CCutDim->Add("cabochon - low domed cabs", false);
	CCutDim->Add("emerald cut", false);
	CCutDim->Add("heart", false);
	CCutDim->Add("long rectangle", false);
	CCutDim->Add("marquise", false);
	CCutDim->Add("oval cut", false);
	CCutDim->Add("pear cut", false);
	CCutDim->Add("square cut", true);
	CCutDim->Add("square cushion", false);
	CCutDim->Add("square step cut", true);
	CCutDim->Add("square with cut corners", true);
	CCutDim->Add("round cut", true);
	CCutDim->Add("round bead", true);
	CCutDim->Add("rectangle", false);
	CCutDim->Add("rectangle step cut", false);
	CCutDim->Add("rectangle with cut corners", false);
	CCutDim->Add("rectangular cushion", false);
	CCutDim->Add("asscher", true);
	CCutDim->Add("barion", true);
	CCutDim->Add("cushion brilliant", false);
	CCutDim->Add("eight cut", true);
	CCutDim->Add(EMER, false);
	CCutDim->Add("heart brilliant", false);
	CCutDim->Add("flanders cut (dia.)", true);
	CCutDim->Add(DIAOLDEURO, true);
	CCutDim->Add(DIAOLDMINE, true);
	CCutDim->Add(OVAL, false);
	CCutDim->Add(MARQ, false);
	CCutDim->Add(PEAR, false);
	CCutDim->Add("princess brilliant", true);
	CCutDim->Add(RADI, false);
	CCutDim->Add(DIAROUND, true);
	CCutDim->Add("rose cut", true);
	CCutDim->Add(SQUA, true);
	CCutDim->Add("small baguette", false);
	CCutDim->Add("semi circle cut (dia.)", false);
	CCutDim->Add(TAPBAG, false);
	CCutDim->Add("triangle", false);
	CCutDim->Add("triangular cut (dia.)", false);
	CCutDim->Add("trilliant cut (dia.)", false);
	CCutDim->Add("trillion (rounded sides)", false);
	return CCutDim[cutname]; // static method
}

Boolean CCutDim::lwSymbolIsRound(String^ cutname) {
	Dictionary<String^, Boolean>^ tmp = gcnew Dictionary<String^, Boolean>;
	tmp->Add(CHOOSE, true);
	tmp->Add("asscher", false);
	tmp->Add("barion", false);
	tmp->Add(BRIO, true);
	tmp->Add("cabochon - high domed cabs", true);
	tmp->Add("cabochon - low domed cabs", true);
	tmp->Add("cabochon - regular", true);
	tmp->Add("cushion brilliant", true);
	tmp->Add("eight cut", false);
	tmp->Add("emerald cut", false);
	tmp->Add(EMER, false);
	tmp->Add("flanders cut (dia.)", false);
	tmp->Add("heart", true);
	tmp->Add("heart brilliant", true);
	tmp->Add("long rectangle", false);
	tmp->Add("marquise", true);
	tmp->Add(MARQ, true);
	tmp->Add(DIAOLDEURO, true);
	tmp->Add(DIAOLDMINE, true);
	tmp->Add(DIAOVALCUT, true);
	tmp->Add("oval cut", true);
	tmp->Add(PEAR, true);
	tmp->Add("pear cut", true);
	tmp->Add("princess brilliant", false);
	tmp->Add("radiant", false);
	tmp->Add(RADI, false);
	tmp->Add("rectangle", false);
	tmp->Add("rectangle step cut", false);
	tmp->Add("rectangle with cut corners", false);
	tmp->Add("rectangular cushion", false);
	tmp->Add("rose cut", true);
	tmp->Add("round bead", true);
	tmp->Add(DIAROUND, true);
	tmp->Add("round cut", true);
	tmp->Add("semi circle cut (dia.)", true);
	tmp->Add("small baguette", false);
	tmp->Add("square cushion", true);
	tmp->Add("square cushion brilliant", true);
	tmp->Add("square cushion cabochon", true);
	tmp->Add("square cut", false);
	tmp->Add("square cut (dia.)", false);
	tmp->Add("square emerald", false);
	tmp->Add("square princess", false);
	tmp->Add("square radiant", false);
	tmp->Add("square step cut", false);
	tmp->Add("square with cut corners", false);
	tmp->Add("tapered baguette", false);
	tmp->Add("triangle", false);
	tmp->Add("triangular cut (dia.)", false);
	tmp->Add("trilliant cut (dia.)", false);
	tmp->Add("trillion (rounded sides)", false);
	return tmp[cutname]; // static method
}